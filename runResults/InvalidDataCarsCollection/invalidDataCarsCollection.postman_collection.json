{
	"info": {
		"_postman_id": "fec8b366-4ae9-4dcc-847a-3ed81ea0459c",
		"name": "invalidDataCarsCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24710607"
	},
	"item": [
		{
			"name": "Cars",
			"item": [
				{
					"name": "POST/auth/signin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"});",
									"pm.test(\"Response time is less than 5000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"postman.setNextRequest('GET/cars/brands');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"olegkobilinskij@g.com\",\n  \"password\": \"111_Test_111\",\n  \"remember\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{main_url}}auth/signin",
							"host": [
								"{{main_url}}auth"
							],
							"path": [
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/cars/brands",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"pm.test(\"Response time is less than 20000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"postman.setNextRequest('GET/cars/brands{id}');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{main_url}}car/brands",
							"host": [
								"{{main_url}}car"
							],
							"path": [
								"brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/cars/brands{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"pm.test(\"Response time is less than 20000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"postman.setNextRequest('GET/cars/models');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{main_url}}carsbrands/2",
							"host": [
								"{{main_url}}carsbrands"
							],
							"path": [
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/cars/models",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"pm.test(\"Response time is less than 20000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"postman.setNextRequest('GET/cars/models/{id}');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{main_url}}cars/model",
							"host": [
								"{{main_url}}cars"
							],
							"path": [
								"model"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/cars/models/{id}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"pm.test(\"Response time is less than 20000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"postman.setNextRequest('GET/current/cars');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{main_url}}carsmodels/2",
							"host": [
								"{{main_url}}carsmodels"
							],
							"path": [
								"2"
							],
							"query": [
								{
									"key": "id",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/current/cars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"pm.test(\"Response time is less than 20000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"postman.setNextRequest('GET/create/cars');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{main_url}}car",
							"host": [
								"{{main_url}}car"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST/create/cars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"pm.test(\"Response time is less than 20000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"postman.setNextRequest('GET/current/user/cars/id');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"carBrandId\": 1,\n  \"carModelId\": 1,\n  \"mileage\": 122\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{main_url}}//cars",
							"host": [
								"{{main_url}}"
							],
							"path": [
								"",
								"cars"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/current/user/cars/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"pm.test(\"Response time is less than 20000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"postman.setNextRequest('GET/edit/cars/id');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{main_url}}cars/86",
							"host": [
								"{{main_url}}cars"
							],
							"path": [
								"86"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT/edit/cars/id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Content-Type is present\", function () {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"pm.test(\"Response time is less than 20000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"postman.setNextRequest('GET/auth/logout');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"carBrandId\": 1,\n  \"carModelId\": 1,\n  \"mileage\": 168230\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{main_url}}cars8",
							"host": [
								"{{main_url}}cars8"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/auth/logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"});",
									"pm.test(\"Response time is less than 5000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"postman.setNextRequest('POST/auth/signup');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{main_url}}auth/logout",
							"host": [
								"{{main_url}}auth"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}