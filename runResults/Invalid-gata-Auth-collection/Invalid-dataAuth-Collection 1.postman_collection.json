{
	"info": {
		"_postman_id": "8b9a422a-741c-4acb-b991-46dd6488b34e",
		"name": "Invalid/dataAuth/Collection 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24710607"
	},
	"item": [
		{
			"name": "Invalid/dataAuth",
			"item": [
				{
					"name": "GET/auth/logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"});",
									"pm.test(\"Response time is less than 5000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 404]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"postman.setNextRequest('POST/auth/signup');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{main_url}}//auth/logout",
							"host": [
								"{{main_url}}"
							],
							"path": [
								"",
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST/auth/signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"});",
									"pm.test(\"Response time is less than 5000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"",
									"",
									"",
									"postman.setNextRequest('POST/auth/signin');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"oleh\",\n  \"lastName\": \"kobilinskj\",\n  \"email\": \"olegkobilinskij@g.com\",\n  \"password\": \"111_Test_111\",\n  \"repeatPassword\": \"111_Test_111\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{main_url}}/auth/signu",
							"host": [
								"{{main_url}}"
							],
							"path": [
								"auth",
								"signu"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST/auth/signin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"});",
									"pm.test(\"Response time is less than 5000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"postman.setNextRequest('POST/auth/resetPassword');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"olegkobilinskij@g.com\",\n  \"password\": \"111_Test_111\",\n  \"remember\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{main_url}}auth/signi",
							"host": [
								"{{main_url}}auth"
							],
							"path": [
								"signi"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST/auth/resetPassword",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"});",
									"pm.test(\"Response time is less than 5000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"postman.setNextRequest('DEL/users');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"olegkobilinskij@g.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{main_url}}auth/reset/Password",
							"host": [
								"{{main_url}}auth"
							],
							"path": [
								"reset",
								"Password"
							]
						}
					},
					"response": []
				},
				{
					"name": "DEL/users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"});",
									"pm.test(\"Response time is less than 5000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([404]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"Not Found\");",
									"});",
									"postman.setNextRequest('GET/auth/logout');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{main_url}}user",
							"host": [
								"{{main_url}}user"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}