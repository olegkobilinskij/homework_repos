{
	"info": {
		"_postman_id": "8b9a422a-741c-4acb-b991-46dd6488b34e",
		"name": "Invalid/dataAuth/Collection 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24710607"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "POST/auth/signin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"});",
									"pm.test(\"Response time is less than 5000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"postman.setNextRequest('GET/users/current');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"olegkobilinskij@g.com\",\n  \"password\": \"111_Test_111\",\n  \"remember\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{main_url}}auth/signin",
							"host": [
								"{{main_url}}auth"
							],
							"path": [
								"signin"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/users/current",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"pm.test(\"Response time is less than 5000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"postman.setNextRequest('GET/users/profile');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{main_url}}users/current",
							"host": [
								"{{main_url}}users"
							],
							"path": [
								"current"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/users/profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"country\");",
									"});",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Response time is less than 20000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"postman.setNextRequest('PUT/users/profile');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{main_url}}users/profile",
							"host": [
								"{{main_url}}users"
							],
							"path": [
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT/users/profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"country\");",
									"});",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Response time is less than 20000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"postman.setNextRequest('GET/users/settings');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"photo\": \"user-1621352948859.jpg\",\n  \"name\": \"John\",\n  \"lastName\": \"Dou\",\n  \"dateBirth\": \"2021-03-17T15:21:05.000Z\",\n  \"country\": \"Ukraine\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{main_url}}users/profile",
							"host": [
								"{{main_url}}users"
							],
							"path": [
								"profile"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/users/settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Response time is less than 20000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"postman.setNextRequest('PUT/users/settings');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{main_url}}users/settings",
							"host": [
								"{{main_url}}users"
							],
							"path": [
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT/users/settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Response time is less than 20000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"postman.setNextRequest('GET/auth/logout ');",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currency\": \"usd\",\n  \"distanceUnits\": \"km\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{main_url}}users/settings",
							"host": [
								"{{main_url}}users"
							],
							"path": [
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET/auth/logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"});",
									"pm.test(\"Response time is less than 5000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});",
									"pm.test(\"Vary is present\", function () {",
									"    pm.response.to.have.header(\"Vary\");",
									"});",
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"pm.test(\"Status code name has string\", function () {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"postman.setNextRequest('POST/auth/signin');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{main_url}}auth/logout",
							"host": [
								"{{main_url}}auth"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}